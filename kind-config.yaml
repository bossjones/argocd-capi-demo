kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
# SOURCE: https://github.com/cilium/cilium/blob/aefd4ea3748cf6f82a3959461e2611c1573f4931/contrib/scripts/kind.sh#L193

runtimeConfig:
  # flowcontrol.apiserver.k8s.io/v1beta3=false
  "api/ga": "true"
  "api/beta": "true"
  "flowcontrol.apiserver.k8s.io/v1beta3": "false"
# SOURCE: https://github.com/kubernetes-sigs/kind/blob/9ea8a5993a7118c6f3b126681e8fd0dd5baa64df/pkg/cluster/internal/kubeadm/config.go#L193
# patch the generated kubeadm config with some extra settings
# patch it further using a JSON 6902 patch
kubeadmConfigPatchesJSON6902:
- group: kubeadm.k8s.io
  version: v1beta2
  kind: ClusterConfiguration
  patch: |
    - op: add
      path: /apiServer/certSANs/-
      value: k8s.localhost
# certSANs: [localhost, registry.local.gd, "127.0.0.1", registry.localhost, k8s.localhost, whoami.k8s.localhost, "192.168.3.13"]
kubeadmConfigPatches:
  - |-
    kind: ClusterConfiguration
    apiServer:
      extraArgs:
        enable-admission-plugins: "NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
        v: "4"
        max-requests-inflight: 8000
        max-mutating-requests-inflight: 4400
        # runtime-config: "api/ga=true,api/beta=true"
        #runtime-config: "apps/v1beta1=true,apps/v1beta2=true,extensions/v1beta1/daemonsets=true,extensions/v1beta1/deployments=true,extensions/v1beta1/replicasets=true,extensions/v1beta1/networkpolicies=true,extensions/v1beta1/podsecuritypolicies=true"

    # SOURCE: https://github.com/chrisns/k8s-control-plane-metrics/blob/85fba554f27ed645eccc99ee78a34e75e2f853f1/test.sh#L16
    controllerManager:
      extraArgs:
        v: "4"
        node-monitor-period: 3s
        node-monitor-grace-period: 5m
    controllerManager:
      extraArgs:
        v: "4"
        bind-address: 0.0.0.0
    etcd:
      local:
        extraArgs:
          listen-metrics-urls: http://0.0.0.0:2381
    scheduler:
      extraArgs:
        bind-address: 0.0.0.0
        v: "4"
  - |-
    kind: KubeProxyConfiguration
    metricsBindAddress: 0.0.0.0
  # - |
  #   apiVersion: kubelet.config.k8s.io/v1beta1
  #   kind: KubeletConfiguration
  #   # SOURCE: https://github.com/kubernetes-sigs/kind/blob/9ea8a5993a7118c6f3b126681e8fd0dd5baa64df/pkg/internal/patch/kubeyaml_test.go#L90
  #   # disable disk resource management by default
  #   # kubelet will see the host disk that the inner container runtime
  #   # is ultimately backed by and attempt to recover disk space. we don't want that.
  #   imageGCHighThresholdPercent: 100
  #   evictionHard:
  #     nodefs.available: "0%"
  #     nodefs.inodesFree: "0%"
  #     imagefs.available: "0%"

nodes:
- role: control-plane
  image: kindest/node:v1.27.11@sha256:681253009e68069b8e01aad36a1e0fa8cf18bb0ab3e5c4069b2e65cafdd70843
  # labels:
  #   node-role.kubernetes.io/control-plane: ""
  #   node-role.kubernetes.io/master: ""
  #   app.kubernetes.io/component: "controller"
  # SOURCE: https://kind.sigs.k8s.io/docs/user/ingress/#ingress-nginx
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true"
# ,node-role.kubernetes.io/control-plane=\"\"
# enable-admission-plugins: NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
  extraMounts:
    - hostPath: /var/run/docker.sock
      containerPath: /var/run/docker.sock

  # https://kind.sigs.k8s.io/docs/user/configuration/#extra-mounts
    - containerPath: /var/lib/rancher/k3s/storage
      hostPath: ${PWD}/storage
      # propagation: Bidirectional
      readOnly: false

    - containerPath: /var/log/kubernetes/audit
      hostPath: ${PWD}/audit
      # propagation: Bidirectional
      readOnly: false

  extraPortMappings:
  - containerPort: 8443
    hostPort: 8443
  - containerPort: 30346
    hostPort: 9443
  - containerPort: 80
  # - containerPort: 30000
    hostPort: 80
    protocol: TCP
  - containerPort: 443
  # - containerPort: 30001
    hostPort: 443
    protocol: TCP
  - containerPort: 8080
  # - containerPort: 30002
    hostPort: 8080
    protocol: TCP

- role: control-plane
  image: kindest/node:v1.27.11@sha256:681253009e68069b8e01aad36a1e0fa8cf18bb0ab3e5c4069b2e65cafdd70843
  # labels:
  #   node-role.kubernetes.io/control-plane: ""
  #   node-role.kubernetes.io/master: ""
  #   app.kubernetes.io/component: "controller"
  # SOURCE: https://kind.sigs.k8s.io/docs/user/ingress/#ingress-nginx
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true"
  extraMounts:
    - hostPath: /var/run/docker.sock
      containerPath: /var/run/docker.sock

  # https://kind.sigs.k8s.io/docs/user/configuration/#extra-mounts
    - containerPath: /var/lib/rancher/k3s/storage
      hostPath: ${PWD}/storage
      # propagation: Bidirectional
      readOnly: false

    - containerPath: /var/log/kubernetes/audit
      hostPath: ${PWD}/audit
      # propagation: Bidirectional
      readOnly: false
  # extraPortMappings:
  # - containerPort: 8443
  #   hostPort: 8443
  # - containerPort: 30346
  #   hostPort: 9443
  # - containerPort: 80
  #   hostPort: 80
  #   protocol: TCP
  # - containerPort: 8080
  #   hostPort: 8080
  #   protocol: TCP
  # - containerPort: 443
  #   hostPort: 443
  #   protocol: TCP

- role: control-plane
  image: kindest/node:v1.27.11@sha256:681253009e68069b8e01aad36a1e0fa8cf18bb0ab3e5c4069b2e65cafdd70843
  # labels:
  #   node-role.kubernetes.io/control-plane: ""
  #   node-role.kubernetes.io/master: ""
  #   app.kubernetes.io/component: "controller"
  # SOURCE: https://kind.sigs.k8s.io/docs/user/ingress/#ingress-nginx
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true"
# enable-admission-plugins: NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota

  extraMounts:
    - hostPath: /var/run/docker.sock
      containerPath: /var/run/docker.sock

  # https://kind.sigs.k8s.io/docs/user/configuration/#extra-mounts
    - containerPath: /var/lib/rancher/k3s/storage
      hostPath: ${PWD}/storage
      # propagation: Bidirectional
      readOnly: false

    - containerPath: /var/log/kubernetes/audit
      hostPath: ${PWD}/audit
      # propagation: Bidirectional
      readOnly: false


  # extraPortMappings:
  # - containerPort: 8443
  #   hostPort: 8443
  # - containerPort: 30346
  #   hostPort: 9443
  # - containerPort: 80
  #   hostPort: 80
  #   protocol: TCP
  # - containerPort: 8080
  #   hostPort: 8080
  #   protocol: TCP
  # - containerPort: 443
  #   hostPort: 443
  #   protocol: TCP

- role: worker
  image: kindest/node:v1.27.11@sha256:681253009e68069b8e01aad36a1e0fa8cf18bb0ab3e5c4069b2e65cafdd70843
  # labels:
  #     node-role.kubernetes.io/worker: ""

- role: worker
  image: kindest/node:v1.27.11@sha256:681253009e68069b8e01aad36a1e0fa8cf18bb0ab3e5c4069b2e65cafdd70843
  # labels:
  #     node-role.kubernetes.io/worker: ""

- role: worker
  image: kindest/node:v1.27.11@sha256:681253009e68069b8e01aad36a1e0fa8cf18bb0ab3e5c4069b2e65cafdd70843
  # labels:
  #     node-role.kubernetes.io/worker: ""
